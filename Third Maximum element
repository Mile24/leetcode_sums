Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.
Example 1:

Input: nums = [3,2,1]
Output: 1
Explanation:
The first distinct maximum is 3.
The second distinct maximum is 2.
The third distinct maximum is 1.

Example 2:

Input: nums = [2,2,3,1]
Output: 1
Explanation:
The first distinct maximum is 3.
The second distinct maximum is 2 (both 2's are counted together since they have the same value).
The third distinct maximum is 1.
--------------------------------------------------------------------------------------------------------------
explanation:
// use the set for storing the element of array 
// if the size of set is greater than the given index value then 
// we will introduce new variable last which will have the value "total size of array - given size k"
//from the set  we need to point to the k largest element in the set
	./ use the next  to point to particular index  (variable name "three_max")
// finally return the *three_max;
// if not found then return the  largest element in the set s;


code:
class Solution {
public:
    int thirdMax(vector<int>& nums) {

        set <int> s;
        for(int i=0; i<nums.size(); i++)
        {
        	s.insert(nums[i]);
        }

        if(s.size() >= 3)
        {
        	int last = s.size() - k;
        	auto three_max = next(s,begin(), last);
        	return *three_max;
        
        }
        return *--s.end();

}
};
-----------------------------------------------------------------------------------------------------------------
case 2:
"  using three variable for find the three largest element in the array but the best case is above"
// use the three variable max1, max2, max3 assign the value of LONG_MIN;
//Iterate the array of the element using the auto loop
// check the number is greater than max1 if it true then assign the value of max2 to max3 , max1 to max2 and num to max1;
// check the condition max1> num && num > max2 then assign the value max2 to max3, num = max2;
// check in the similar fashion that max is greater than num and num value is greater than max3
then assign max3 = num;

//in return type max3 == LONG_MIN ? max1: max3;

code:
class Solution {
 public:
  int thirdMax(vector<int>& nums) {

  long max1 = LONG_MIN;
  long max2 = LONG_MIN;
  long max3 = LONG_MIN;

  for(auto num : nums)
  {
    if (num> max1 )
    {
        max3 = max2;
        max2= max1;
        max1 = num;
    }
    else if (max1> num && max2 <num)
    {
        max3 = max2;
        max2 = num;
    }
    else if (max2 > njum && num >max3)
    max3 = num;


    return max3 == LONG_MIN ? max1 : max3;

  }
  };
  


