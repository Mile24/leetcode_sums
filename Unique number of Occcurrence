Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.

 

Example 1:

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
Example 2:

Input: arr = [1,2]
Output: false
Example 3:

Input: arr = [-3,0,1,-3,1,1,1,-3,10,0]
Output: true
------------------------------------------------------------------------------------------------------
solution:
To find the multiple same element occurrence in array
// make the array as sorted and check using the prev, and current variable to relation between prev and the current element;




case2:
// use hash map  to store the count of the element in array;
// after that use the unordered_set to store the element which have been stored in hash_map;
//return the size fo unordered_set and hash_map if the value is equal then return true else false;

code:
class Solution {
public:
    bool uniqueOccurrences(vector<int>& arr) {
      map <int, int> mpp;
      for(auto ch : arr)
      {
        mpp[ch]++;
      }

  unordered_set<int> s;

  for(auto ch : mpp)
    {
        s.insert(ch.second);

      }
return mpp.size() == s.size();




}

};
