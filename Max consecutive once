Given a binary array nums, return the maximum number of consecutive 1's in the array.
Example 1:
Input: nums = [1,1,0,1,1,1]
Output: 3
Explanation: The first two digits or the last three digits are consecutive 1s. The maximum number of consecutive 1s is 3.
Example 2:
Input: nums = [1,0,1,1,0,1]
Output: 2 

explanation:
./find the continuous once in the array
./ if the element is not found then initalize the value of the count  to zero
./ store the count value in some variable using the max function

code:
class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& nums) {

         int n= nums.size();
         int max =0;
        for(int i =0; i<n ; i++)
        {
            if(nums[i] == 1)
            {
        
                count++;
                max1 = max(count , max1); // this code can be return outside loop then it will also work;

            }
            else 
            {
                count =0;
        
            }
        }
        return max1;
}
};

